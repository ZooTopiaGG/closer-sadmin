{"version":3,"sources":["webpack:///./src/views/statistic/index.vue?e34d","webpack:///src/views/statistic/index.vue","webpack:///./src/views/statistic/index.vue?06a3","webpack:///./src/views/statistic/index.vue","webpack:///./src/views/statistic/index.vue?d797"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","staticRenderFns","plates","options","label","value","statisticvue_type_script_lang_js_","middleware","asyncData","_asyncData","Object","asyncToGenerator","regeneratorRuntime","mark","_callee","_ref","app","error","para","data","arr","wrap","_context","prev","next","type","withDeleted","name","plateform","pageNum","pageSize","startTime","endTime","$axios","$post","concat","api","promotion","plan_list","sent","code","result","map","x","typename","channelid","id","planid","abrupt","res","count","message","t0","stop","_x","apply","arguments","computed","authUser","$store","state","JSON","parse","searchname","pagenum","pagesize","checkedRecord","planTitle","channelTitle","planDisabled","channelDisabled","updaterow","op","pickerOptions2","disabledDate","time","getTime","Date","now","shortcuts","text","onClick","picker","end","start","setTime","$emit","dataValue","flitertypes","types","outerVisible","channelForm","channelname","outerVisible1","planForm","planname","stype","methods","handleSelect2","spread","row","$router","push","path","retain","getList","_getList","_callee2","self","tp","plate","newType","_context2","length","join","createTime","$com","$messgae","t1","addChannel","sureAddChannel","_sureAddChannel","_callee3","_context3","isEn","$message","plan_add","success","addPlan","sureAddPlan","_sureAddPlan","_callee4","_context4","sureUpdated","_sureUpdated","_callee5","_context5","plan_update","t2","updateRow","_updateRow","_callee6","_context6","_x2","_x3","lookRow","sureDel","_sureDel","_callee7","_context7","plan_delete","console","log","_x4","deleteRow","_deleteRow","_callee9","_this","_context9","$confirm","confirmButtonText","cancelButtonText","then","_callee8","_context8","catch","_x5","handleCurrentChange","val","handleSelect","item","handleSelectPlates","handleSelectByTime","beforeMount","_this2","mounted","views_statisticvue_type_script_lang_js_","component","componentNormalizer","__file","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_240565ff_scoped_scoped_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-06b7.ce6b3f5e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"wait\"},[_vm._v(\"功能暂未开发，敬请期待！\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- <section id=\"permission\" class=\"flex flex-v\">\n    <section class=\"permission_title\">数据统计/推广数据</section>\n    <section class=\"permission_table flex-1\">\n      <section class=\"permission_table_top flex flex-pack-justify\">\n        <section class=\"flex flex-align-center flex-1\">\n          <section class=\"flex flex-align-center\">\n            <el-select class='list-filter-select' @change=\"handleSelect\" v-model=\"flitertypes\" placeholder=\"全部\">\n              <el-option v-for=\"item in types.options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </section>\n          <section class=\"flex flex-align-center\">\n            <span class=\"labelname\">\n              输入名称：\n            </span>\n            <el-input class=\"user_phone\" v-model=\"searchname\" placeholder=\"输入名称\" @keyup.enter.native=\"getList\">\n              <el-button slot=\"append\" @click=\"getList\" icon=\"el-icon-search\"></el-button>\n            </el-input>\n          </section>\n          <section class=\"flex flex-align-center\">\n            <section class=\"block2\">\n              <el-date-picker v-model=\"dataValue\" type=\"daterange\" :default-time=\"['00:00:00', '23:59:59']\" @change=\"handleSelectByTime\" align=\"right\"\n                unlink-panels value-format=\"timestamp\" range-separator=\"-\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\"\n                :picker-options=\"pickerOptions2\">\n              </el-date-picker>\n            </section>\n          </section>\n        </section>\n        <section v-if=\"authUser.type === 1 || (authUser.permissions && authUser.permissions.data[0].permissions === 'data_update')\">\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"addChannel\">新建渠道</el-button>\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"addPlan\">新建推广计划</el-button>\n        </section>\n        <section v-else-if=\"opControlStatus\">\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"addChannel\">新建渠道</el-button>\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"addPlan\">新建推广计划</el-button>\n        </section>\n      </section>\n      <section class=\"permission_table_middle\">\n        <el-checkbox-group v-model=\"checkedRecord\" @change=\"handleSelectPlates\">\n          <el-checkbox v-for=\"plate in plates.options\" :label=\"plate.label\" :key=\"plate.value\">{{ plate.label }}</el-checkbox>\n        </el-checkbox-group>\n      </section>\n      <section class=\"permission_table_content\">\n        <el-table :data=\"res.data\" style=\"width: 100%\">\n          <el-table-column fixed=\"left\" label=\"名称\">\n            <template slot-scope=\"scope\">\n              <section>\n                <el-button type=\"text\" size=\"small\" v-if=\"scope.row.type === 0\" @click=\"spread(scope.row)\">\n                  <span>{{ scope.row.name }}</span>\n                </el-button>\n                <span v-else>{{ scope.row.name }}</span>\n              </section>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"typename\" label=\"类型\">\n          </el-table-column>\n          <el-table-column prop=\"channelid\" label=\"渠道ID\">\n          </el-table-column>\n          <el-table-column prop=\"planid\" label=\"推广计划ID\">\n          </el-table-column>\n          <el-table-column prop=\"viewCounts\" label=\"页面访问次数\">\n          </el-table-column>\n          <el-table-column prop=\"clickCounts\" label=\"点击数\">\n          </el-table-column>\n          <el-table-column prop=\"clickRatio\" label=\"点击率\">\n          </el-table-column>\n          <el-table-column prop=\"deviceCounts\" label=\"设备激活数\">\n          </el-table-column>\n          <el-table-column prop=\"deviceRatio\" label=\"激活率\">\n          </el-table-column>\n          <el-table-column prop=\"registCounts\" label=\"注册数\">\n          </el-table-column>\n          <el-table-column prop=\"plateform\" label=\"平台\">\n          </el-table-column>\n          <el-table-column prop=\"createTime\" label=\"创建时间\">\n          </el-table-column>\n          <el-table-column fixed=\"right\" label=\"操作\" width=\"160\">\n            <template slot-scope=\"scope\">\n              <section>\n                <el-button type=\"text\" size=\"small\" @click=\"retain\">\n                  <span>留存</span>\n                </el-button>\n                <el-button type=\"text\" v-if=\"authUser.type === 1 || (authUser.permissions && authUser.permissions.data[0].permissions === 'data_update')\" size=\"small\" @click=\"updateRow(scope.row, 'update')\">\n                  <span>修改</span>\n                </el-button>\n                <el-button type=\"text\" v-if=\"authUser.type === 1 || (authUser.permissions && authUser.permissions.data[0].permissions === 'data_view')\" size=\"small\" @click=\"lookRow(scope.row, 'look')\">\n                  <span>查看</span>\n                </el-button>\n                <el-button type=\"text\" v-if=\"authUser.type === 1 || (authUser.permissions && authUser.permissions.data[0].permissions === 'data_update')\" size=\"small\" @click=\"deleteRow(scope.row, 'delete')\">\n                  <span>删除</span>\n                </el-button>\n              </section>\n            </template>\n          </el-table-column>\n        </el-table>\n      </section>\n    </section>\n    <el-dialog :title=\"channelTitle\" :visible.sync=\"outerVisible\">\n      <el-form :model=\"channelForm\" label-width=\"120px\" class=\"column-form\" :disabled=\"channelDisabled\">\n        <el-form-item label=\"选择平台：\" prop=\"plateform\">\n                <el-radio-group v-model=\"channelForm.plateform\" @change=\"handleSelect2\">\n                  <el-radio label=\"IOS\"></el-radio>\n                  <el-radio label=\"安卓\"></el-radio>\n                </el-radio-group>\n              </el-form-item>\n            <el-form-item label=\"渠道名称：\" prop=\"channelname\">\n                <el-input v-model=\"channelForm.channelname\" class=\"channelinput\"></el-input>\n              </el-form-item>\n            <el-form-item label=\"渠道ID：\" prop=\"channelid\">\n                <el-input v-model=\"channelForm.channelid\" class=\"channelinput\" :disabled=\"channelForm.plateform === 'IOS'\"></el-input>\n              </el-form-item>\n        \n      </el-form>\n      <section slot=\"footer\" class=\"dialog-footer\">\n        <section v-if=\"op === 'update'\">\n          <el-button @click=\"outerVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"sureUpdated\">确 定</el-button>\n        </section>\n        <section v-else-if=\"op === 'look'\">\n          <el-button type=\"primary\" @click=\"outerVisible = false\">确 定</el-button>\n        </section>\n        <section v-else>\n          <el-button @click=\"outerVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"sureAddChannel\">确 定</el-button>\n        </section>\n      </section>\n    </el-dialog>\n    <el-dialog :title=\"planTitle\" :visible.sync=\"outerVisible1\">\n      <el-form :model=\"planForm\" label-width=\"120px\" class=\"column-form\" :disabled=\"planDisabled\">\n        <el-form-item label=\"推广计划名称：\" prop=\"planname\">\n          <el-input v-model=\"planForm.planname\" class=\"channelinput\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"选择平台：\" prop=\"plateform\">\n          <el-radio-group v-model=\"planForm.plateform\">\n            <el-radio label=\"IOS\"></el-radio>\n            <el-radio label=\"安卓\"></el-radio>\n            <el-radio label=\"其他\"></el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"推广计划ID：\" prop=\"planid\">\n          <el-input v-model=\"planForm.planid\" class=\"channelinput\"></el-input>\n        </el-form-item>\n      </el-form>\n      <section slot=\"footer\" class=\"dialog-footer\">\n        <section v-if=\"op === 'update'\">\n          <el-button @click=\"outerVisible1 = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"sureUpdated\">确 定</el-button>\n        </section>\n        <section v-else-if=\"op === 'look'\">\n          <el-button type=\"primary\" @click=\"outerVisible1 = false\">确 定</el-button>\n        </section>\n        <section v-else>\n          <el-button @click=\"outerVisible1 = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"sureAddPlan\">确 定</el-button>\n        </section>\n      </section>\n    </el-dialog>\n    <section class=\"block cloumn-block\" v-if=\"res.count>0\">\n      <el-pagination @current-change=\"handleCurrentChange\" :current-page=\"pagenum\" :page-size=\"pagesize\" layout=\"total, prev, pager, next, jumper\"\n        :total=\"res.count\">\n      </el-pagination>\n    </section>\n  </section> -->\n  <section class=\"wait\">功能暂未开发，敬请期待！</section>\n</template>\n<script>\nconst plates = {\n  options: [\n    {\n      label: \"IOS\",\n      value: \"0\"\n    },\n    {\n      label: \"安卓\",\n      value: \"1\"\n    },\n    {\n      label: \"其他\",\n      value: \"2\"\n    }\n  ]\n};\nexport default {\n  middleware: \"auth\",\n  async asyncData({ app, error }) {\n    try {\n      let para = {\n        type: null,\n        withDeleted: false,\n        name: \"\",\n        plateform: null,\n        pageNum: 1,\n        pageSize: 10,\n        startTime: null,\n        endTime: null\n      };\n      let data = await app.$axios.$post(`${api.promotion.plan_list}`, para);\n      if (data.code === 0) {\n        let arr = await data.result.data.map(x => {\n          // x.createTime = $async.createTime(x.createTime, \"yy-mm-dd hh:MM\");\n          if (x.type === 1) {\n            x.typename = \"渠道\";\n            x.channelid = x.id;\n            x.planid = \"-\";\n          } else {\n            x.typename = \"推广计划\";\n            x.planid = x.id;\n            x.channelid = \"-\";\n          }\n          return x;\n        });\n        return {\n          res: {\n            data: arr,\n            count: data.result.count\n          }\n        };\n      } else {\n        error({\n          message: `错误代码:${data.code}, ${data.result}`\n        });\n      }\n    } catch (err) {\n      error({\n        message: `${err}`\n      });\n    }\n  },\n  computed: {\n    authUser() {\n      return this.$store.state.authUser\n        ? JSON.parse(this.$store.state.authUser)\n        : false;\n    }\n    // opControlStatus() {\n    //   let auth = this.$store.state.authUser,\n    //     st;\n    //   if (auth && auth.permissions && auth.permissions.data) {\n    //     auth.permissions.data.forEach(x => {\n    //       if (x.permissions === \"data_update\") {\n    //         st = true;\n    //         return st;\n    //       } else {\n    //         st = false;\n    //       }\n    //     });\n    //     return st;\n    //   }\n    // }\n  },\n  data() {\n    return {\n      res: {\n        data: [],\n        count: \"\"\n      },\n      searchname: \"\",\n      // 分页\n      pagenum: 1,\n      pagesize: 10,\n      checkedRecord: [],\n      planTitle: \"新建推广计划\",\n      channelTitle: \"新建渠道\",\n      planDisabled: false,\n      channelDisabled: false,\n      updaterow: {},\n      plates: plates,\n      op: \"\", // 操作类型\n      // 日期选择\n      pickerOptions2: {\n        disabledDate(time) {\n          return time.getTime() > Date.now();\n        },\n        shortcuts: [\n          {\n            text: \"最近一周\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit(\"pick\", [start, end]);\n            }\n          },\n          {\n            text: \"最近一个月\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n              picker.$emit(\"pick\", [start, end]);\n            }\n          },\n          {\n            text: \"最近三个月\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n              picker.$emit(\"pick\", [start, end]);\n            }\n          }\n        ]\n      },\n      // 绑定选择到的日期 数组\n      dataValue: \"\",\n      flitertypes: \"\",\n      types: {\n        options: [\n          {\n            value: \"渠道\",\n            label: \"渠道\"\n          },\n          {\n            value: \"推广\",\n            label: \"推广\"\n          },\n          {\n            value: \"全部\",\n            label: \"全部\"\n          }\n        ]\n      },\n      // 渠道\n      outerVisible: false,\n      channelForm: {\n        plateform: \"安卓\",\n        channelname: \"\",\n        channelid: \"\"\n      },\n      // 推广计划\n      outerVisible1: false,\n      planForm: {\n        plateform: \"安卓\",\n        planname: \"\",\n        planid: \"\"\n      },\n      // 搜索字段\n      stype: \"\" //\n    };\n  },\n  methods: {\n    handleSelect2() {\n      if (this.channelForm.plateform === \"IOS\") {\n        this.channelForm.channelid = \"IOS\";\n      } else {\n        if (this.op != \"update\") {\n          this.channelForm.channelid = \"\";\n        } else {\n          this.channelForm.channelid = this.updaterow.channelid;\n          return;\n        }\n      }\n    },\n    spread(row) {\n      this.$router.push({\n        path: `/statistic/spread/${row.planid}?type=${row.name}`\n      });\n    },\n    retain() {\n      // channel渠道  plan推广  activity活动\n      this.$router.push({\n        path: `/statistic/retain/channel/8asd19ds`\n      });\n    },\n    // 获取渠道或者推广计划列表 包括搜索\n    async getList() {\n      // 0:推广计划，1:渠道\n      let self = this,\n        tp,\n        plate;\n      switch (self.flitertypes) {\n        case \"渠道\":\n          tp = 1;\n          break;\n        case \"推广\":\n          tp = 0;\n          break;\n        case \"全部\":\n          tp = null;\n          break;\n        default:\n          tp = null;\n      }\n      let newType = await self.checkedRecord.map(x => {\n        if (x === \"IOS\") {\n          x = \"0\";\n        } else if (x === \"安卓\") {\n          x = \"1\";\n        } else {\n          x = \"2\";\n        }\n        return x;\n      });\n      if (newType.length > 0) {\n        plate = newType.join(\",\");\n      } else {\n        plate = null;\n      }\n      try {\n        let para = {\n          type: tp,\n          withDeleted: false,\n          name: self.searchname,\n          plateform: plate,\n          pageNum: self.pagenum,\n          pageSize: self.pagesize,\n          startTime: self.dataValue[0] || null,\n          endTime: self.dataValue[1] || null\n        };\n        let data = await self.$axios.$post(`${api.promotion.plan_list}`, para);\n        if (data.code === 0) {\n          let arr = await data.result.data.map(x => {\n            x.createTime = self.$com.createTime(x.createTime, \"yy-mm-dd hh:MM\");\n            if (x.type === 1) {\n              x.typename = \"渠道\";\n              x.channelid = x.id;\n              x.planid = \"-\";\n            } else {\n              x.typename = \"推广计划\";\n              x.planid = x.id;\n              x.channelid = \"-\";\n            }\n            return x;\n          });\n          self.res = {\n            data: arr,\n            count: data.result.count\n          };\n        } else {\n          self.$messgae.error(data.result);\n        }\n      } catch (err) {\n        self.$messgae.error(err);\n      }\n    },\n    // plan_add 增加渠道\n    addChannel() {\n      let self = this;\n      self.outerVisible = true;\n      self.channelTitle = \"新建渠道\";\n      self.op = \"add\";\n      self.channelDisabled = false;\n      self.channelForm = {\n        plateform: \"安卓\",\n        channelname: \"\",\n        channelid: \"\"\n      };\n    },\n    async sureAddChannel() {\n      let self = this,\n        plate;\n      switch (self.channelForm.plateform) {\n        case \"IOS\":\n          plate = 0;\n          break;\n        case \"安卓\":\n          plate = 1;\n          break;\n        case \"其他\":\n          plate = 2;\n          break;\n        default:\n          plate = 2;\n      }\n      if (!self.$com.isEn(self.channelForm.channelid)) {\n        self.$message.error(\"请输入纯英文的ID\");\n        return;\n      }\n      try {\n        let para = {\n          type: 1,\n          name: self.channelForm.channelname,\n          plateform: plate,\n          id: self.channelForm.channelid\n          // customId: self.channelForm.channelid // 自定义id\n        };\n        let data = await self.$axios.$post(`${api.promotion.plan_add}`, para);\n        if (data.code === 0) {\n          self.$message.success(\"新建成功！\");\n          await self.getList();\n          self.outerVisible = false;\n        } else {\n          self.$message.error(data.result);\n        }\n      } catch (e) {\n        self.$message.error(e);\n      }\n    },\n    // plan_add 增加推广计划\n    addPlan() {\n      let self = this;\n      self.outerVisible1 = true;\n      self.planTitle = \"新建推广计划\";\n      self.planDisabled = false;\n      self.op = \"add\";\n      self.planForm = {\n        plateform: \"安卓\",\n        planname: \"\",\n        planid: \"\"\n      };\n    },\n    async sureAddPlan() {\n      let self = this,\n        plate;\n      switch (self.channelForm.plateform) {\n        case \"IOS\":\n          plate = 0;\n          break;\n        case \"安卓\":\n          plate = 1;\n          break;\n        case \"其他\":\n          plate = 2;\n          break;\n        default:\n          plate = 2;\n      }\n      if (!self.$com.isEn(self.planForm.planid)) {\n        self.$message.error(\"请输入纯英文的ID\");\n        return;\n      }\n      try {\n        let para = {\n          type: 0,\n          name: self.planForm.planname,\n          plateform: plate,\n          id: self.planForm.planid\n          // customId: \"\" // 自定义id\n        };\n        let data = await self.$axios.$post(`${api.promotion.plan_add}`, para);\n        if (data.code === 0) {\n          self.$message.success(\"新建成功！\");\n          await self.getList();\n          self.outerVisible1 = false;\n        } else {\n          self.$message.error(data.result);\n        }\n      } catch (e) {\n        self.$message.error(e);\n      }\n    },\n    // 确认更新\n    async sureUpdated() {\n      let self = this,\n        plate,\n        para;\n      try {\n        // 渠道\n        if (self.updaterow.type === 1) {\n          switch (self.channelForm.plateform) {\n            case \"IOS\":\n              plate = 0;\n              break;\n            case \"安卓\":\n              plate = 1;\n              break;\n            case \"其他\":\n              plate = 2;\n              break;\n            default:\n              plate = 2;\n          }\n          para = {\n            id: self.updaterow.id,\n            name: self.channelForm.channelname,\n            plateform: plate,\n            type: 1\n            // customId: self.channelForm.channelid // 自定义id\n          };\n        } else {\n          // 计划\n          switch (self.planForm.plateform) {\n            case \"IOS\":\n              plate = 0;\n              break;\n            case \"安卓\":\n              plate = 1;\n              break;\n            case \"其他\":\n              plate = 2;\n              break;\n            default:\n              plate = 2;\n          }\n          para = {\n            id: self.updaterow.id,\n            name: self.planForm.planname,\n            plateform: plate,\n            type: 0\n            // customId: \"\" // 自定义id\n          };\n        }\n        let data = await self.$axios.$post(\n          `${api.promotion.plan_update}`,\n          para\n        );\n        if (data.code === 0) {\n          self.$message.success(\"更新成功！\");\n          await self.getList();\n          self.outerVisible1 = false;\n          self.outerVisible = false;\n        } else {\n          self.$message.error(data.result);\n        }\n      } catch (e) {\n        self.$message.error(e);\n      }\n    },\n    // 更新 plan_update\n    async updateRow(row, op) {\n      let self = this,\n        plate;\n      self.op = op;\n      self.updaterow = row;\n      switch (row.plateform) {\n        case 0:\n          plate = \"IOS\";\n          break;\n        case 1:\n          plate = \"安卓\";\n          break;\n        case 2:\n          plate = \"其他\";\n          break;\n        default:\n          plate = \"其他\";\n      }\n      if (row.type === 1) {\n        self.outerVisible = true;\n        self.channelTitle = \"修改渠道\";\n        self.channelDisabled = false;\n\n        self.channelForm = {\n          plateform: plate,\n          channelname: row.name,\n          channelid: row.channelid\n        };\n      } else {\n        self.outerVisible1 = true;\n        self.planTitle = \"修改推广计划\";\n        self.planDisabled = false;\n        self.planForm = {\n          plateform: plate,\n          planname: row.name,\n          planid: row.id\n        };\n      }\n    },\n    // 查看\n    lookRow(row, op) {\n      let self = this,\n        plate;\n      self.op = op;\n      switch (row.plateform) {\n        case 0:\n          plate = \"IOS\";\n          break;\n        case 1:\n          plate = \"安卓\";\n          break;\n        case 2:\n          plate = \"其他\";\n          break;\n        default:\n          plate = \"其他\";\n      }\n      if (row.type === 1) {\n        self.outerVisible = true;\n        self.channelTitle = \"查看渠道\";\n        self.channelDisabled = true;\n\n        self.channelForm = {\n          plateform: plate,\n          channelname: row.name,\n          channelid: row.channelid\n        };\n      } else {\n        self.outerVisible1 = true;\n        self.planTitle = \"查看推广计划\";\n        self.planDisabled = true;\n        self.planForm = {\n          plateform: plate,\n          planname: row.name,\n          planid: row.id\n        };\n      }\n    },\n    // 删除 plan_delete\n    async sureDel(row) {\n      let self = this;\n      try {\n        let data = await self.$axios.$post(\n          `${api.promotion.plan_delete}?id=${row.id}`\n        );\n        if (data.code === 0) {\n          await self.getList();\n          self.$message.success(\"操作成功！\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    async deleteRow(row) {\n      let self = this;\n      self\n        .$confirm(`此操作将删除‘${row.name}’, 是否继续?`, \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n        .then(async () => {\n          await self.sureDel(row);\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消操作\"\n          });\n        });\n    },\n    // 分页\n    handleCurrentChange(val) {\n      this.pagenum = val;\n      this.getList();\n    },\n    handleSelect(item) {\n      let self = this;\n      if (item === \"渠道\") {\n        self.plates = [\"IOS\", \"安卓\"];\n      } else {\n        self.plates = [\"IOS\", \"安卓\", \"其他\"];\n      }\n      self.getList();\n    },\n    handleSelectPlates(item) {\n      this.getList();\n    },\n    handleSelectByTime(item) {\n      this.getList();\n    }\n  },\n  beforeMount() {\n    let self = this;\n    self.res.data.map(x => {\n      x.createTime = this.$com.createTime(x.createTime, \"yy-mm-dd hh:MM\");\n      return self.res.data;\n    });\n  },\n  mounted() {}\n};\n</script>\n<style scoped=\"scoped\">\n.labelname {\n  margin-right: 10px;\n  min-width: 60px;\n}\n.channelinput {\n  width: 240px;\n}\n.list-filter-select {\n  max-width: 100px;\n  margin-right: 20px;\n}\n\n.user_phone {\n  margin-right: 20px;\n  max-width: 200px;\n}\n\n.permission_table_middle {\n  height: 30px;\n  background: #fff;\n  padding: 0 20px;\n}\n\n.dialog-label {\n  width: 120px;\n}\n\n.dialog-sure {\n  margin-left: 20px;\n}\n\n.searchtrue {\n  height: 40px;\n  border-bottom: 1px solid #f4f4f4;\n}\n\n.searchname {\n  margin: 0 40px;\n}\n\n.searcherror {\n  color: red;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=240565ff&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=240565ff&scoped=scoped&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"240565ff\",\n  null\n  \n)\n\ncomponent.options.__file = \"index.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=240565ff&scoped=scoped&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=240565ff&scoped=scoped&lang=css&\""],"sourceRoot":""}