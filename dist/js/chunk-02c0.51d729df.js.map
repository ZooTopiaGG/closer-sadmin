{"version":3,"sources":["webpack:///./src/views/statistic/index.vue?cfb7","webpack:///src/views/statistic/index.vue","webpack:///./src/views/statistic/index.vue?06a3","webpack:///./src/views/statistic/index.vue","webpack:///./src/views/statistic/index.vue?003d"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","staticRenderFns","plates","options","label","value","statisticvue_type_script_lang_js_","middleware","asyncData","_asyncData","Object","asyncToGenerator","regeneratorRuntime","mark","_callee","_ref","app","error","para","data","arr","wrap","_context","prev","next","type","withDeleted","name","plateform","pageNum","pageSize","startTime","endTime","$axios","$post","concat","api","promotion","plan_list","sent","code","result","map","x","typename","channelid","id","planid","abrupt","res","count","message","t0","stop","_x","apply","arguments","computed","authUser","$store","state","JSON","parse","searchname","pagenum","pagesize","checkedRecord","planTitle","channelTitle","planDisabled","channelDisabled","updaterow","op","pickerOptions2","disabledDate","time","getTime","Date","now","shortcuts","text","onClick","picker","end","start","setTime","$emit","dataValue","flitertypes","types","outerVisible","channelForm","channelname","outerVisible1","planForm","planname","stype","methods","handleSelect2","spread","row","console","log","$router","push","path","retain","getList","_getList","_callee2","self","tp","plate","newType","_context2","length","join","createTime","$com","$messgae","t1","addChannel","sureAddChannel","_sureAddChannel","_callee3","_context3","isEn","$message","plan_add","success","addPlan","sureAddPlan","_sureAddPlan","_callee4","_context4","sureUpdated","_sureUpdated","_callee5","_context5","plan_update","t2","updateRow","_updateRow","_callee6","_context6","_x2","_x3","lookRow","sureDel","_sureDel","_callee7","_context7","plan_delete","_x4","deleteRow","_deleteRow","_callee9","_this","_context9","$confirm","confirmButtonText","cancelButtonText","then","_callee8","_context8","catch","_x5","handleCurrentChange","val","handleSelect","item","handleSelectPlates","handleSelectByTime","beforeMount","_this2","mounted","views_statisticvue_type_script_lang_js_","component","componentNormalizer","__file","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_1ae99256_scoped_scoped_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-02c0.51d729df.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"wait\"},[_vm._v(\"功能暂未开发，敬请期待！\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- <section id=\"permission\" class=\"flex flex-v\">\n    <section class=\"permission_title\">数据统计/推广数据</section>\n    <section class=\"permission_table flex-1\">\n      <section class=\"permission_table_top flex flex-pack-justify\">\n        <section class=\"flex flex-align-center flex-1\">\n          <section class=\"flex flex-align-center\">\n            <el-select class='list-filter-select' @change=\"handleSelect\" v-model=\"flitertypes\" placeholder=\"全部\">\n              <el-option v-for=\"item in types.options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </section>\n          <section class=\"flex flex-align-center\">\n            <span class=\"labelname\">\n              输入名称：\n            </span>\n            <el-input class=\"user_phone\" v-model=\"searchname\" placeholder=\"输入名称\" @keyup.enter.native=\"getList\">\n              <el-button slot=\"append\" @click=\"getList\" icon=\"el-icon-search\"></el-button>\n            </el-input>\n          </section>\n          <section class=\"flex flex-align-center\">\n            <section class=\"block2\">\n              <el-date-picker v-model=\"dataValue\" type=\"daterange\" :default-time=\"['00:00:00', '23:59:59']\" @change=\"handleSelectByTime\" align=\"right\"\n                unlink-panels value-format=\"timestamp\" range-separator=\"-\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\"\n                :picker-options=\"pickerOptions2\">\n              </el-date-picker>\n            </section>\n          </section>\n        </section>\n        <section v-if=\"authUser.type === 1 || (authUser.permissions && authUser.permissions.data[0].permissions === 'data_update')\">\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"addChannel\">新建渠道</el-button>\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"addPlan\">新建推广计划</el-button>\n        </section>\n        <section v-else-if=\"opControlStatus\">\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"addChannel\">新建渠道</el-button>\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"addPlan\">新建推广计划</el-button>\n        </section>\n      </section>\n      <section class=\"permission_table_middle\">\n        <el-checkbox-group v-model=\"checkedRecord\" @change=\"handleSelectPlates\">\n          <el-checkbox v-for=\"plate in plates.options\" :label=\"plate.label\" :key=\"plate.value\">{{ plate.label }}</el-checkbox>\n        </el-checkbox-group>\n      </section>\n      <section class=\"permission_table_content\">\n        <el-table :data=\"res.data\" style=\"width: 100%\">\n          <el-table-column fixed=\"left\" label=\"名称\">\n            <template slot-scope=\"scope\">\n              <section>\n                <el-button type=\"text\" size=\"small\" v-if=\"scope.row.type === 0\" @click=\"spread(scope.row)\">\n                  <span>{{ scope.row.name }}</span>\n                </el-button>\n                <span v-else>{{ scope.row.name }}</span>\n              </section>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"typename\" label=\"类型\">\n          </el-table-column>\n          <el-table-column prop=\"channelid\" label=\"渠道ID\">\n          </el-table-column>\n          <el-table-column prop=\"planid\" label=\"推广计划ID\">\n          </el-table-column>\n          <el-table-column prop=\"viewCounts\" label=\"页面访问次数\">\n          </el-table-column>\n          <el-table-column prop=\"clickCounts\" label=\"点击数\">\n          </el-table-column>\n          <el-table-column prop=\"clickRatio\" label=\"点击率\">\n          </el-table-column>\n          <el-table-column prop=\"deviceCounts\" label=\"设备激活数\">\n          </el-table-column>\n          <el-table-column prop=\"deviceRatio\" label=\"激活率\">\n          </el-table-column>\n          <el-table-column prop=\"registCounts\" label=\"注册数\">\n          </el-table-column>\n          <el-table-column prop=\"plateform\" label=\"平台\">\n          </el-table-column>\n          <el-table-column prop=\"createTime\" label=\"创建时间\">\n          </el-table-column>\n          <el-table-column fixed=\"right\" label=\"操作\" width=\"160\">\n            <template slot-scope=\"scope\">\n              <section>\n                <el-button type=\"text\" size=\"small\" @click=\"retain\">\n                  <span>留存</span>\n                </el-button>\n                <el-button type=\"text\" v-if=\"authUser.type === 1 || (authUser.permissions && authUser.permissions.data[0].permissions === 'data_update')\" size=\"small\" @click=\"updateRow(scope.row, 'update')\">\n                  <span>修改</span>\n                </el-button>\n                <el-button type=\"text\" v-if=\"authUser.type === 1 || (authUser.permissions && authUser.permissions.data[0].permissions === 'data_view')\" size=\"small\" @click=\"lookRow(scope.row, 'look')\">\n                  <span>查看</span>\n                </el-button>\n                <el-button type=\"text\" v-if=\"authUser.type === 1 || (authUser.permissions && authUser.permissions.data[0].permissions === 'data_update')\" size=\"small\" @click=\"deleteRow(scope.row, 'delete')\">\n                  <span>删除</span>\n                </el-button>\n              </section>\n            </template>\n          </el-table-column>\n        </el-table>\n      </section>\n    </section>\n    <el-dialog :title=\"channelTitle\" :visible.sync=\"outerVisible\">\n      <el-form :model=\"channelForm\" label-width=\"120px\" class=\"column-form\" :disabled=\"channelDisabled\">\n        <el-form-item label=\"选择平台：\" prop=\"plateform\">\n                <el-radio-group v-model=\"channelForm.plateform\" @change=\"handleSelect2\">\n                  <el-radio label=\"IOS\"></el-radio>\n                  <el-radio label=\"安卓\"></el-radio>\n                </el-radio-group>\n              </el-form-item>\n            <el-form-item label=\"渠道名称：\" prop=\"channelname\">\n                <el-input v-model=\"channelForm.channelname\" class=\"channelinput\"></el-input>\n              </el-form-item>\n            <el-form-item label=\"渠道ID：\" prop=\"channelid\">\n                <el-input v-model=\"channelForm.channelid\" class=\"channelinput\" :disabled=\"channelForm.plateform === 'IOS'\"></el-input>\n              </el-form-item>\n        \n      </el-form>\n      <section slot=\"footer\" class=\"dialog-footer\">\n        <section v-if=\"op === 'update'\">\n          <el-button @click=\"outerVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"sureUpdated\">确 定</el-button>\n        </section>\n        <section v-else-if=\"op === 'look'\">\n          <el-button type=\"primary\" @click=\"outerVisible = false\">确 定</el-button>\n        </section>\n        <section v-else>\n          <el-button @click=\"outerVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"sureAddChannel\">确 定</el-button>\n        </section>\n      </section>\n    </el-dialog>\n    <el-dialog :title=\"planTitle\" :visible.sync=\"outerVisible1\">\n      <el-form :model=\"planForm\" label-width=\"120px\" class=\"column-form\" :disabled=\"planDisabled\">\n        <el-form-item label=\"推广计划名称：\" prop=\"planname\">\n          <el-input v-model=\"planForm.planname\" class=\"channelinput\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"选择平台：\" prop=\"plateform\">\n          <el-radio-group v-model=\"planForm.plateform\">\n            <el-radio label=\"IOS\"></el-radio>\n            <el-radio label=\"安卓\"></el-radio>\n            <el-radio label=\"其他\"></el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"推广计划ID：\" prop=\"planid\">\n          <el-input v-model=\"planForm.planid\" class=\"channelinput\"></el-input>\n        </el-form-item>\n      </el-form>\n      <section slot=\"footer\" class=\"dialog-footer\">\n        <section v-if=\"op === 'update'\">\n          <el-button @click=\"outerVisible1 = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"sureUpdated\">确 定</el-button>\n        </section>\n        <section v-else-if=\"op === 'look'\">\n          <el-button type=\"primary\" @click=\"outerVisible1 = false\">确 定</el-button>\n        </section>\n        <section v-else>\n          <el-button @click=\"outerVisible1 = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"sureAddPlan\">确 定</el-button>\n        </section>\n      </section>\n    </el-dialog>\n    <section class=\"block cloumn-block\" v-if=\"res.count>0\">\n      <el-pagination @current-change=\"handleCurrentChange\" :current-page=\"pagenum\" :page-size=\"pagesize\" layout=\"total, prev, pager, next, jumper\"\n        :total=\"res.count\">\n      </el-pagination>\n    </section>\n  </section> -->\n  <section class=\"wait\">功能暂未开发，敬请期待！</section>\n</template>\n<script>\nconst plates = {\n  options: [\n    {\n      label: \"IOS\",\n      value: \"0\"\n    },\n    {\n      label: \"安卓\",\n      value: \"1\"\n    },\n    {\n      label: \"其他\",\n      value: \"2\"\n    }\n  ]\n};\nexport default {\n  middleware: \"auth\",\n  async asyncData({ app, error }) {\n    try {\n      let para = {\n        type: null,\n        withDeleted: false,\n        name: \"\",\n        plateform: null,\n        pageNum: 1,\n        pageSize: 10,\n        startTime: null,\n        endTime: null\n      };\n      let data = await app.$axios.$post(`${api.promotion.plan_list}`, para);\n      if (data.code === 0) {\n        let arr = await data.result.data.map(x => {\n          // x.createTime = $async.createTime(x.createTime, \"yy-mm-dd hh:MM\");\n          if (x.type === 1) {\n            x.typename = \"渠道\";\n            x.channelid = x.id;\n            x.planid = \"-\";\n          } else {\n            x.typename = \"推广计划\";\n            x.planid = x.id;\n            x.channelid = \"-\";\n          }\n          return x;\n        });\n        return {\n          res: {\n            data: arr,\n            count: data.result.count\n          }\n        };\n      } else {\n        error({\n          message: `错误代码:${data.code}, ${data.result}`\n        });\n      }\n    } catch (err) {\n      error({\n        message: `${err}`\n      });\n    }\n  },\n  computed: {\n    authUser() {\n      return this.$store.state.authUser\n        ? JSON.parse(this.$store.state.authUser)\n        : false;\n    }\n    // opControlStatus() {\n    //   let auth = this.$store.state.authUser,\n    //     st;\n    //   if (auth && auth.permissions && auth.permissions.data) {\n    //     auth.permissions.data.forEach(x => {\n    //       if (x.permissions === \"data_update\") {\n    //         st = true;\n    //         return st;\n    //       } else {\n    //         st = false;\n    //       }\n    //     });\n    //     return st;\n    //   }\n    // }\n  },\n  data() {\n    return {\n      res: {\n        data: [],\n        count: \"\"\n      },\n      searchname: \"\",\n      // 分页\n      pagenum: 1,\n      pagesize: 10,\n      checkedRecord: [],\n      planTitle: \"新建推广计划\",\n      channelTitle: \"新建渠道\",\n      planDisabled: false,\n      channelDisabled: false,\n      updaterow: {},\n      plates: plates,\n      op: \"\", // 操作类型\n      // 日期选择\n      pickerOptions2: {\n        disabledDate(time) {\n          return time.getTime() > Date.now();\n        },\n        shortcuts: [\n          {\n            text: \"最近一周\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit(\"pick\", [start, end]);\n            }\n          },\n          {\n            text: \"最近一个月\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n              picker.$emit(\"pick\", [start, end]);\n            }\n          },\n          {\n            text: \"最近三个月\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n              picker.$emit(\"pick\", [start, end]);\n            }\n          }\n        ]\n      },\n      // 绑定选择到的日期 数组\n      dataValue: \"\",\n      flitertypes: \"\",\n      types: {\n        options: [\n          {\n            value: \"渠道\",\n            label: \"渠道\"\n          },\n          {\n            value: \"推广\",\n            label: \"推广\"\n          },\n          {\n            value: \"全部\",\n            label: \"全部\"\n          }\n        ]\n      },\n      // 渠道\n      outerVisible: false,\n      channelForm: {\n        plateform: \"安卓\",\n        channelname: \"\",\n        channelid: \"\"\n      },\n      // 推广计划\n      outerVisible1: false,\n      planForm: {\n        plateform: \"安卓\",\n        planname: \"\",\n        planid: \"\"\n      },\n      // 搜索字段\n      stype: \"\" //\n    };\n  },\n  methods: {\n    handleSelect2() {\n      if (this.channelForm.plateform === \"IOS\") {\n        this.channelForm.channelid = \"IOS\";\n      } else {\n        if (this.op != \"update\") {\n          this.channelForm.channelid = \"\";\n        } else {\n          this.channelForm.channelid = this.updaterow.channelid;\n          return;\n        }\n      }\n    },\n    spread(row) {\n      console.log(\"row===\", row);\n      this.$router.push({\n        path: `/statistic/spread/${row.planid}?type=${row.name}`\n      });\n    },\n    retain() {\n      // channel渠道  plan推广  activity活动\n      this.$router.push({\n        path: `/statistic/retain/channel/8asd19ds`\n      });\n    },\n    // 获取渠道或者推广计划列表 包括搜索\n    async getList() {\n      // 0:推广计划，1:渠道\n      let self = this,\n        tp,\n        plate;\n      switch (self.flitertypes) {\n        case \"渠道\":\n          tp = 1;\n          break;\n        case \"推广\":\n          tp = 0;\n          break;\n        case \"全部\":\n          tp = null;\n          break;\n        default:\n          tp = null;\n      }\n      let newType = await self.checkedRecord.map(x => {\n        if (x === \"IOS\") {\n          x = \"0\";\n        } else if (x === \"安卓\") {\n          x = \"1\";\n        } else {\n          x = \"2\";\n        }\n        return x;\n      });\n      if (newType.length > 0) {\n        plate = newType.join(\",\");\n      } else {\n        plate = null;\n      }\n      try {\n        let para = {\n          type: tp,\n          withDeleted: false,\n          name: self.searchname,\n          plateform: plate,\n          pageNum: self.pagenum,\n          pageSize: self.pagesize,\n          startTime: self.dataValue[0] || null,\n          endTime: self.dataValue[1] || null\n        };\n        let data = await self.$axios.$post(`${api.promotion.plan_list}`, para);\n        if (data.code === 0) {\n          let arr = await data.result.data.map(x => {\n            x.createTime = self.$com.createTime(x.createTime, \"yy-mm-dd hh:MM\");\n            if (x.type === 1) {\n              x.typename = \"渠道\";\n              x.channelid = x.id;\n              x.planid = \"-\";\n            } else {\n              x.typename = \"推广计划\";\n              x.planid = x.id;\n              x.channelid = \"-\";\n            }\n            return x;\n          });\n          self.res = {\n            data: arr,\n            count: data.result.count\n          };\n        } else {\n          self.$messgae.error(data.result);\n        }\n      } catch (err) {\n        self.$messgae.error(err);\n      }\n    },\n    // plan_add 增加渠道\n    addChannel() {\n      let self = this;\n      self.outerVisible = true;\n      self.channelTitle = \"新建渠道\";\n      self.op = \"add\";\n      self.channelDisabled = false;\n      self.channelForm = {\n        plateform: \"安卓\",\n        channelname: \"\",\n        channelid: \"\"\n      };\n    },\n    async sureAddChannel() {\n      let self = this,\n        plate;\n      switch (self.channelForm.plateform) {\n        case \"IOS\":\n          plate = 0;\n          break;\n        case \"安卓\":\n          plate = 1;\n          break;\n        case \"其他\":\n          plate = 2;\n          break;\n        default:\n          plate = 2;\n      }\n      if (!self.$com.isEn(self.channelForm.channelid)) {\n        self.$message.error(\"请输入纯英文的ID\");\n        return;\n      }\n      try {\n        let para = {\n          type: 1,\n          name: self.channelForm.channelname,\n          plateform: plate,\n          id: self.channelForm.channelid\n          // customId: self.channelForm.channelid // 自定义id\n        };\n        let data = await self.$axios.$post(`${api.promotion.plan_add}`, para);\n        if (data.code === 0) {\n          self.$message.success(\"新建成功！\");\n          await self.getList();\n          self.outerVisible = false;\n        } else {\n          self.$message.error(data.result);\n        }\n      } catch (e) {\n        self.$message.error(e);\n      }\n    },\n    // plan_add 增加推广计划\n    addPlan() {\n      let self = this;\n      self.outerVisible1 = true;\n      self.planTitle = \"新建推广计划\";\n      self.planDisabled = false;\n      self.op = \"add\";\n      self.planForm = {\n        plateform: \"安卓\",\n        planname: \"\",\n        planid: \"\"\n      };\n    },\n    async sureAddPlan() {\n      let self = this,\n        plate;\n      switch (self.channelForm.plateform) {\n        case \"IOS\":\n          plate = 0;\n          break;\n        case \"安卓\":\n          plate = 1;\n          break;\n        case \"其他\":\n          plate = 2;\n          break;\n        default:\n          plate = 2;\n      }\n      if (!self.$com.isEn(self.planForm.planid)) {\n        self.$message.error(\"请输入纯英文的ID\");\n        return;\n      }\n      try {\n        let para = {\n          type: 0,\n          name: self.planForm.planname,\n          plateform: plate,\n          id: self.planForm.planid\n          // customId: \"\" // 自定义id\n        };\n        let data = await self.$axios.$post(`${api.promotion.plan_add}`, para);\n        if (data.code === 0) {\n          self.$message.success(\"新建成功！\");\n          await self.getList();\n          self.outerVisible1 = false;\n        } else {\n          self.$message.error(data.result);\n        }\n      } catch (e) {\n        self.$message.error(e);\n      }\n    },\n    // 确认更新\n    async sureUpdated() {\n      let self = this,\n        plate,\n        para;\n      try {\n        // 渠道\n        if (self.updaterow.type === 1) {\n          switch (self.channelForm.plateform) {\n            case \"IOS\":\n              plate = 0;\n              break;\n            case \"安卓\":\n              plate = 1;\n              break;\n            case \"其他\":\n              plate = 2;\n              break;\n            default:\n              plate = 2;\n          }\n          para = {\n            id: self.updaterow.id,\n            name: self.channelForm.channelname,\n            plateform: plate,\n            type: 1\n            // customId: self.channelForm.channelid // 自定义id\n          };\n        } else {\n          // 计划\n          switch (self.planForm.plateform) {\n            case \"IOS\":\n              plate = 0;\n              break;\n            case \"安卓\":\n              plate = 1;\n              break;\n            case \"其他\":\n              plate = 2;\n              break;\n            default:\n              plate = 2;\n          }\n          para = {\n            id: self.updaterow.id,\n            name: self.planForm.planname,\n            plateform: plate,\n            type: 0\n            // customId: \"\" // 自定义id\n          };\n        }\n        let data = await self.$axios.$post(\n          `${api.promotion.plan_update}`,\n          para\n        );\n        if (data.code === 0) {\n          self.$message.success(\"更新成功！\");\n          await self.getList();\n          self.outerVisible1 = false;\n          self.outerVisible = false;\n        } else {\n          self.$message.error(data.result);\n        }\n      } catch (e) {\n        self.$message.error(e);\n      }\n    },\n    // 更新 plan_update\n    async updateRow(row, op) {\n      let self = this,\n        plate;\n      self.op = op;\n      self.updaterow = row;\n      switch (row.plateform) {\n        case 0:\n          plate = \"IOS\";\n          break;\n        case 1:\n          plate = \"安卓\";\n          break;\n        case 2:\n          plate = \"其他\";\n          break;\n        default:\n          plate = \"其他\";\n      }\n      if (row.type === 1) {\n        self.outerVisible = true;\n        self.channelTitle = \"修改渠道\";\n        self.channelDisabled = false;\n\n        self.channelForm = {\n          plateform: plate,\n          channelname: row.name,\n          channelid: row.channelid\n        };\n      } else {\n        self.outerVisible1 = true;\n        self.planTitle = \"修改推广计划\";\n        self.planDisabled = false;\n        self.planForm = {\n          plateform: plate,\n          planname: row.name,\n          planid: row.id\n        };\n      }\n    },\n    // 查看\n    lookRow(row, op) {\n      let self = this,\n        plate;\n      self.op = op;\n      switch (row.plateform) {\n        case 0:\n          plate = \"IOS\";\n          break;\n        case 1:\n          plate = \"安卓\";\n          break;\n        case 2:\n          plate = \"其他\";\n          break;\n        default:\n          plate = \"其他\";\n      }\n      if (row.type === 1) {\n        self.outerVisible = true;\n        self.channelTitle = \"查看渠道\";\n        self.channelDisabled = true;\n\n        self.channelForm = {\n          plateform: plate,\n          channelname: row.name,\n          channelid: row.channelid\n        };\n      } else {\n        self.outerVisible1 = true;\n        self.planTitle = \"查看推广计划\";\n        self.planDisabled = true;\n        self.planForm = {\n          plateform: plate,\n          planname: row.name,\n          planid: row.id\n        };\n      }\n    },\n    // 删除 plan_delete\n    async sureDel(row) {\n      let self = this;\n      try {\n        let data = await self.$axios.$post(\n          `${api.promotion.plan_delete}?id=${row.id}`\n        );\n        if (data.code === 0) {\n          await self.getList();\n          self.$message.success(\"操作成功！\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    async deleteRow(row) {\n      let self = this;\n      self\n        .$confirm(`此操作将删除‘${row.name}’, 是否继续?`, \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n        .then(async () => {\n          await self.sureDel(row);\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消操作\"\n          });\n        });\n    },\n    // 分页\n    handleCurrentChange(val) {\n      this.pagenum = val;\n      this.getList();\n    },\n    handleSelect(item) {\n      let self = this;\n      if (item === \"渠道\") {\n        self.plates = [\"IOS\", \"安卓\"];\n      } else {\n        self.plates = [\"IOS\", \"安卓\", \"其他\"];\n      }\n      self.getList();\n    },\n    handleSelectPlates(item) {\n      this.getList();\n    },\n    handleSelectByTime(item) {\n      this.getList();\n    }\n  },\n  beforeMount() {\n    let self = this;\n    self.res.data.map(x => {\n      x.createTime = this.$com.createTime(x.createTime, \"yy-mm-dd hh:MM\");\n      return self.res.data;\n    });\n  },\n  mounted() {}\n};\n</script>\n<style scoped=\"scoped\">\n.labelname {\n  margin-right: 10px;\n  min-width: 60px;\n}\n.channelinput {\n  width: 240px;\n}\n.list-filter-select {\n  max-width: 100px;\n  margin-right: 20px;\n}\n\n.user_phone {\n  margin-right: 20px;\n  max-width: 200px;\n}\n\n.permission_table_middle {\n  height: 30px;\n  background: #fff;\n  padding: 0 20px;\n}\n\n.dialog-label {\n  width: 120px;\n}\n\n.dialog-sure {\n  margin-left: 20px;\n}\n\n.searchtrue {\n  height: 40px;\n  border-bottom: 1px solid #f4f4f4;\n}\n\n.searchname {\n  margin: 0 40px;\n}\n\n.searcherror {\n  color: red;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1ae99256&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=1ae99256&scoped=scoped&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1ae99256\",\n  null\n  \n)\n\ncomponent.options.__file = \"index.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=1ae99256&scoped=scoped&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=1ae99256&scoped=scoped&lang=css&\""],"sourceRoot":""}